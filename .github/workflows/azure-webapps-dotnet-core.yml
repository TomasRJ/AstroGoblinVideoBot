# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Static Web App and have the following secrets set in your repository:
# * AZURE_STATIC_WEB_APPS_API_TOKEN: This is your Azure Static Web Apps API token. You can get this from the Azure portal.
# * HMACSECRET: This is the secret key used to encrypt the JWT token.
# * REDDITCLIENTID: This is the client ID of the Reddit app.
# * REDDITSECRET: This is the secret of the Reddit app.
# * CALLBACKURL: This is the callback URL for the Google PubSubHubbub.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode


name: Build and deploy ASP.Net Core app to an Azure Static Web App

env:
  AZURE_WEBAPP_NAME: astrogoblinvideobot    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'            # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.300'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}
        env:
          HmacSecret: ${{secrets.HMACSECRET}}
          RedditClientId: ${{secrets.REDDITCLIENTID}}
          RedditSecret: ${{secrets.REDDITSECRET}}
          CallbackUrl: ${{secrets.CALLBACKURL}}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: "${{runner.os}}-nuget-${{hashFiles('**/packages.lock.json')}}"
          restore-keys: |
            ${{runner.os}}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release --property:PublishDir=${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{steps.deploy-to-webapp.outputs.webapp-url}}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Static Web App
        id: deploy-to-static-webapp
        uses: azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{secrets.AZURE_STATIC_WEB_APPS_API_TOKEN}}
          app_artifact_location: ${{env.DOTNET_ROOT}}/myapp
          action: "upload"
          skip_app_build: true
  
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{secrets.AZURE_STATIC_WEB_APPS_API_TOKEN}}
          app_artifact_location: ${{env.DOTNET_ROOT}}/myapp
          action: "close"
